--=============== МОДУЛЬ 4. УГЛУБЛЕНИЕ В SQL =======================================
--= ПОМНИТЕ, ЧТО НЕОБХОДИМО УСТАНОВИТЬ ВЕРНОЕ СОЕДИНЕНИЕ И ВЫБРАТЬ СХЕМУ PUBLIC===========
SET search_path TO public;

--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--База данных: если подключение к облачной базе, то создаёте новую схему с префиксом в --виде фамилии, название должно быть на латинице в нижнем регистре и таблицы создаете --в этой новой схеме, если подключение к локальному серверу, то создаёте новую схему и --в ней создаёте таблицы.

--Спроектируйте базу данных, содержащую три справочника:
--· язык (английский, французский и т. п.);
--· народность (славяне, англосаксы и т. п.);
--· страны (Россия, Германия и т. п.).
--Две таблицы со связями: язык-народность и народность-страна, отношения многие ко многим. Пример таблицы со связями — film_actor.
--Требования к таблицам-справочникам:
--· наличие ограничений первичных ключей.
--· идентификатору сущности должен присваиваться автоинкрементом;
--· наименования сущностей не должны содержать null-значения, не должны допускаться --дубликаты в названиях сущностей.
--Требования к таблицам со связями:
--· наличие ограничений первичных и внешних ключей.

--В качестве ответа на задание пришлите запросы создания таблиц и запросы по --добавлению в каждую таблицу по 5 строк с данными.
 
--СОЗДАНИЕ ТАБЛИЦЫ ЯЗЫКИ

CREATE TABLE language_people(
  language_id serial PRIMARY KEY,
  language varchar(150) UNIQUE NOT NULL,
  create_date timestamp DEFAULT now()
);

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ ЯЗЫКИ

INSERT INTO "language_people" ("language")
VALUES ('либуа'),
('арабский и багирми'),
('сунданский'),
('бай'),
('балийский'),
('банджарский'),
('африкаанс'),
('бацбийский и грузинский'),
('наречие удмуртского языка'),
('эдо'),
('бурушаски'),
('вепсский и русский'),
('висайя'),
('водский'),
('вьетнамский'),
('гинухский'),
('годоберинский'),
('гонжа'),
('греческий'),
('гуанские языки'),
('эфиосемитские языки'),
('нама'),
('даргинский'),
('датский'),
('даурский'),
('языки чага и банту'),
('догонский'),
('долганский'),
('дунсянский'),
('иврит'),
('языки же'),
('зулу'),
('иллинойс'),
('Индонезия'),
('Испаноязычные латиноамериканцы'),
('испанский'),
('тверской диалект карельского языка'),
('кикуйю'),
('кистинский диалект чеченского языка'),
('коми-язьвинский'),
('крызский'),
('кунама'),
('кусунда'),
('кховар'),
('языки луба'),
('макасарский'),
('чивере (сиуанские языки)'),
('монго'),
('халха-монгольский'),
('неварский'),
('океанийские языки'),
('никобарские языки'),
('орокский'),
('оропом'),
('орочский'),
('каян'),
('палау'),
('Пирахан'),
('полинезийские языки'),
('мангареванский'),
('маркизский'),
('таитянский'),
('окситанский'),
('румынский'),
('сандаве'),
('киргизский'),
('сарыкольский'),
('седанг'),
('аслийские языки'),
('сукума'),
('трухменский'),
('монгорский'),
('китайский'),
('удэгейский'),
('удмуртский'),
('ульчский'),
('французский'),
('фур (конджара)'),
('хадза'),
('хакасский'),
('хантыйский'),
('хауса'),
('хваршинский'),
('Персидский(Дари)'),
('кихехе (языки банту)'),
('гереро'),
('хиналугский'),
('чамалинский'),
('Чаморро'),
('чешский'),
('чжуанский'),
('чувашский'),
('чукотский'),
('чулымский'),
('банту'),
('шиллук'),
('шипибо-конибо'),
('язык шэ'),
('энде'),
('юан'),
('юкагирские языки'),
('яванский и индонезийский'),
('якутский'),
('япский'),
('японский'),
('абунг'),
('австралийские языки'),
('немецкий'),
('агульский'),
('адыгейский'),
('убыхский'),
('айнский'),
('алтайский'),
('алеутский'),
('кимбунду и португальский'),
('ангас'),
('андаманские языки'),
('андийский'),
('арабский'),
('аравакский'),
('арчинский'),
('атабаскские языки'),
('ачех'),
('малайско-полинезийские языки');

--СОЗДАНИЕ ТАБЛИЦЫ НАРОДНОСТИ

CREATE TABLE nationality_people(
  nationality_id serial PRIMARY KEY,
  nationality varchar(150) UNIQUE NOT NULL,
  create_date timestamp DEFAULT now()
);

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ НАРОДНОСТИ

INSERT INTO nationality_people (nationality)
VALUES ('Бальбоа'),
('Багирми'),
('Бадуи'),
('Бай'),
('Балийцы'),
('Банджары'),
('Бастеры'),
('Бацбийцы'),
('Бесермяне'),
('Бини'),
('Буриши'),
('Вепсы'),
('Висайя'),
('Водь'),
('Вьеты'),
('Гинухцы'),
('Годоберинцы'),
('Гонжа'),
('Греки-киприоты'),
('Гуан'),
('Гураге'),
('Дамара'),
('Даргинцы'),
('Датчане'),
('Дауры'),
('Джагга'),
('Догоны'),
('Долганы'),
('Дунсян'),
('Самаритяне'),
('Народы же'),
('Зулусы'),
('Иллинойсы'),
('Индонезийцы'),
('Испаноязычные латиноамериканцы'),
('Итонама'),
('Тверские карелы'),
('Кикуйю'),
('Кистинцы'),
('Коми-язьвинцы'),
('Крызы'),
('Кунама'),
('Кусунда'),
('Кхо'),
('Луба'),
('Макассары'),
('Миссури'),
('Монго'),
('Халха-монголы'),
('Невари'),
('Ни-вануату'),
('Никобарцы'),
('Ороки'),
('Оропом'),
('Орочи'),
('Падаунг'),
('Палау'),
('Пирахан'),
('Полинезийцы'),
('Мангареванцы'),
('Маркизцы'),
('Таитяне'),
('Провансальцы'),
('Румыны'),
('Сандаве'),
('Сарт-калмаки'),
('Сарыкольцы'),
('Седанги'),
('Сенои'),
('Сукума'),
('Сунданцы'),
('Трухмены'),
('Ту'),
('Туцзя'),
('Удэгейцы'),
('Удмурты'),
('Ульчи'),
('Французы'),
('Фур'),
('Хадза'),
('Хакасы'),
('Ханты'),
('Хань (китайцы)'),
('Хауса'),
('Хваршины'),
('Хазарейцы'),
('Хехе'),
('Химба'),
('Хуэй (китайские мусульмане)'),
('Хиналугцы'),
('Чамалалы'),
('Чаморро'),
('Чехи'),
('Чжуаны'),
('Чуваши'),
('Чукчи'),
('Чулымцы'),
('Шамбала'),
('Шиллук'),
('Шипибо-конибо'),
('Шэ'),
('Энде'),
('Юан'),
('Юкагиры'),
('Яванцы'),
('Якуты'),
('Яп'),
('Японцы'),
('Абунг'),
('Австралийские аборигены'),
('Австрийцы'),
('Агулы'),
('Адыгейцы'),
('Убыхи'),
('Айны'),
('Алтайцы'),
('Алеуты'),
('Амбунду'),
('Ангас'),
('Андаманцы'),
('Андийцы'),
('Бахрейнцы'),
('Иорданцы'),
('Кувейтцы'),
('Эмиратцы'),
('Араваки'),
('Арчинцы'),
('Атакаменьо'),
('Атабаски'),
('Ачех'),
('Аэта');

--СОЗДАНИЕ ТАБЛИЦЫ СТРАНЫ

CREATE TABLE country(
  country_id serial PRIMARY KEY,
  country varchar(150) UNIQUE NOT NULL,
  create_date timestamp DEFAULT now()
);

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СТРАНЫ

INSERT INTO country (country)
VALUES ('ДРК'),
('Чад'),
('Индонезия'),
('КНР'),
('Индонезия и Малайзия'),
('Намибия'),
('Грузия'),
('Россия'),
('Нигерия'),
('Кашмир'),
('Филиппины'),
('Россия и Эстония'),
('Вьетнам'),
('Дагестан (Россия)'),
('Гана'),
('Кипр'),
('Эфиопия'),
('Дания'),
('Китай'),
('Танзания'),
('Мали'),
('Израиль'),
('Бразилия'),
('ЮАР'),
('Оклахома (США)'),
('индонезийский'),
('Испаноязычные латиноамериканцы'),
('Бени (Боливия)'),
('Кения'),
('Азербайджан'),
('Эритрея'),
('Непал'),
('Читрал (округ) (Пакистан)'),
('Демократическая Республика Конго'),
('Сулавеси (Индонезия)'),
('США'),
('Монголия'),
('Катманду (Непал)'),
('Вануату'),
('Никобарские острова (Индия)'),
('Уганда и Кения'),
('Мьянма'),
('Палау'),
('Полинезия'),
('Мангарева (Французская Полинезия)'),
('Маркизские острова (Французская Полинезия)'),
('Французская Полинезия'),
('Франция'),
('Румыния'),
('Киргизия'),
('Малайзия'),
('Ставропольский край (Россия)'),
('Цинхай и Ганьсу (Китай)'),
('Судан'),
('Афганистан'),
('Гуам (Марианские острова)'),
('Чехия'),
('Перу'),
('Таиланд'),
('Федеративные Штаты Микронезии'),
('Япония'),
('Австралия'),
('Австрия'),
('Турция'),
('Россия и США'),
('Ангола'),
('Андаманские острова'),
('Бахрейн'),
('Иордания'),
('Кувейт'),
('ОАЭ'),
('Гайана'),
('Чили'),
('США и Канада');

--СОЗДАНИЕ ПЕРВОЙ ТАБЛИЦЫ СО СВЯЗЯМИ

CREATE TABLE "language_nationality"(
  nationality_id integer,
  language_id integer,
  PRIMARY KEY (nationality_id, language_id),
  FOREIGN KEY (nationality_id) REFERENCES nationality_people(nationality_id),
  FOREIGN KEY (language_id) REFERENCES language_people(language_id)
);

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СО СВЯЗЯМИ

INSERT INTO language_nationality (nationality_id,language_id)
VALUES ('1', '1'),
('2', '2'),
('3', '3'),
('4', '4'),
('5', '5'),
('6', '6'),
('7', '7'),
('8', '8'),
('9', '9'),
('10', '10'),
('11', '11'),
('12', '12'),
('13', '13'),
('14', '14'),
('15', '15'),
('16', '16'),
('17', '17'),
('18', '18'),
('19', '19'),
('20', '20'),
('21', '21'),
('22', '22'),
('23', '23'),
('24', '24'),
('25', '25'),
('26', '26'),
('27', '27'),
('28', '28'),
('29', '29'),
('30', '30'),
('31', '31'),
('32', '32'),
('33', '33'),
('34', '34'),
('35', '35'),
('36', '36'),
('37', '37'),
('38', '38'),
('39', '39'),
('40', '40'),
('41', '41'),
('42', '42'),
('43', '43'),
('44', '44'),
('45', '45'),
('46', '46'),
('47', '47'),
('48', '48'),
('49', '49'),
('50', '50'),
('51', '51'),
('52', '52'),
('53', '53'),
('54', '54'),
('55', '55'),
('56', '56'),
('57', '57'),
('58', '58'),
('59', '59'),
('60', '60'),
('61', '61'),
('62', '62'),
('63', '63'),
('64', '64'),
('65', '65'),
('66', '66'),
('67', '67'),
('68', '68'),
('69', '69'),
('70', '70'),
('71', '3'),
('72', '71'),
('73', '72'),
('74', '73'),
('75', '74'),
('76', '75'),
('77', '76'),
('78', '77'),
('79', '78'),
('80', '79'),
('81', '80'),
('82', '81'),
('83', '73'),
('84', '82'),
('85', '83'),
('86', '84'),
('87', '85'),
('88', '86'),
('89', '73'),
('90', '87'),
('91', '88'),
('92', '89'),
('93', '90'),
('94', '91'),
('95', '92'),
('96', '93'),
('97', '94'),
('98', '95'),
('99', '96'),
('100', '97'),
('101', '98'),
('102', '99'),
('103', '100'),
('104', '101'),
('105', '102'),
('106', '103'),
('107', '104'),
('108', '105'),
('109', '106'),
('110', '107'),
('111', '108'),
('112', '109'),
('113', '110'),
('114', '111'),
('115', '112'),
('116', '113'),
('117', '114'),
('118', '115'),
('119', '116'),
('120', '117'),
('121', '118'),
('122', '119'),
('123', '119'),
('124', '119'),
('125', '119'),
('126', '120'),
('127', '121'),
('128', '36'),
('129', '122'),
('130', '123'),
('131', '124');

--СОЗДАНИЕ ВТОРОЙ ТАБЛИЦЫ СО СВЯЗЯМИ

CREATE TABLE nationality_country(
  nationality_id integer,
  country_id integer,
  PRIMARY KEY (nationality_id, country_id),
  FOREIGN KEY (nationality_id) REFERENCES nationality_people(nationality_id),
  FOREIGN KEY (country_id) REFERENCES country(country_id)
);

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СО СВЯЗЯМИ

INSERT INTO nationality_country  (nationality_id , country_id)
VALUES ('1', '6'),
('2', '7'),
('3', '8'),
('4', '9'),
('5', '8'),
('6', '10'),
('7', '11'),
('8', '12'),
('9', '13'),
('10', '14'),
('11', '15'),
('12', '13'),
('13', '16'),
('14', '17'),
('15', '18'),
('16', '19'),
('17', '19'),
('18', '20'),
('19', '21'),
('20', '20'),
('21', '22'),
('22', '11'),
('23', '13'),
('24', '23'),
('25', '24'),
('26', '25'),
('27', '26'),
('28', '13'),
('29', '24'),
('30', '27'),
('31', '28'),
('32', '29'),
('33', '30'),
('34', '31'),
('35', '32'),
('36', '33'),
('37', '13'),
('38', '34'),
('39', '12'),
('40', '13'),
('41', '35'),
('42', '36'),
('43', '37'),
('44', '38'),
('45', '39'),
('46', '40'),
('47', '41'),
('48', '39'),
('49', '42'),
('50', '43'),
('51', '44'),
('52', '45'),
('53', '13'),
('54', '46'),
('55', '13'),
('56', '47'),
('57', '48'),
('58', '28'),
('59', '49'),
('60', '50'),
('61', '51'),
('62', '52'),
('63', '53'),
('64', '54'),
('65', '25'),
('66', '55'),
('67', '24'),
('68', '18'),
('69', '56'),
('70', '25'),
('71', '8'),
('72', '57'),
('73', '58'),
('74', '24'),
('75', '13'),
('76', '13'),
('77', '13'),
('78', '53'),
('79', '59'),
('80', '25'),
('81', '13'),
('82', '13'),
('83', '24'),
('84', '14'),
('85', '19'),
('86', '60'),
('87', '25'),
('88', '11'),
('89', '24'),
('90', '35'),
('91', '19'),
('92', '61'),
('93', '62'),
('94', '24'),
('95', '13'),
('96', '13'),
('97', '13'),
('98', '25'),
('99', '59'),
('100', '63'),
('101', '24'),
('102', '8'),
('103', '64'),
('104', '13'),
('105', '8'),
('106', '13'),
('107', '65'),
('108', '66'),
('109', '8'),
('110', '67'),
('111', '68'),
('112', '13'),
('113', '13'),
('114', '69'),
('115', '66'),
('116', '13'),
('117', '70'),
('118', '71'),
('119', '14'),
('120', '72'),
('121', '19'),
('122', '73'),
('123', '74'),
('124', '75'),
('125', '76'),
('126', '77'),
('127', '19'),
('128', '78'),
('129', '79'),
('130', '8'),
('131', '16');

--======== ДОПОЛНИТЕЛЬНАЯ ЧАСТЬ ==============


--ЗАДАНИЕ №1 
--Создайте новую таблицу film_new со следующими полями:
--·   	film_name - название фильма - тип данных varchar(255) и ограничение not null
--·   	film_year - год выпуска фильма - тип данных integer, условие, что значение должно быть больше 0
--·   	film_rental_rate - стоимость аренды фильма - тип данных numeric(4,2), значение по умолчанию 0.99
--·   	film_duration - длительность фильма в минутах - тип данных integer, ограничение not null и условие, что значение должно быть больше 0
--Если работаете в облачной базе, то перед названием таблицы задайте наименование вашей схемы.

CREATE TABLE film_new(
  film_name varchar(255) NOT NULL,
  film_year integer CHECK (film_year > 0),
  film_rental_rate numeric(4, 2) DEFAULT 0.99,
  film_duration integer NOT NULL CHECK (film_duration > 0)
);

--ЗАДАНИЕ №2 
--Заполните таблицу film_new данными с помощью SQL-запроса, где колонкам соответствуют массивы данных:
--·       film_name - array['The Shawshank Redemption', 'The Green Mile', 'Back to the Future', 'Forrest Gump', 'Schindlers List']
--·       film_year - array[1994, 1999, 1985, 1994, 1993]
--·       film_rental_rate - array[2.99, 0.99, 1.99, 2.99, 3.99]
--·   	  film_duration - array[142, 189, 116, 142, 195]

INSERT INTO film_new(film_name, film_year, film_rental_rate, film_duration)
SELECT UNNEST(array['The Shawshank Redemption', 'The Green Mile', 'Back to the Future', 'Forrest Gump', 'Schindlers List']),
  UNNEST(array[1994, 1999, 1985, 1994, 1993]),
  UNNEST(array[2.99, 0.99, 1.99, 2.99, 3.99]),
  UNNEST(array[142, 189, 116, 142, 195]);

--ЗАДАНИЕ №3
--Обновите стоимость аренды фильмов в таблице film_new с учетом информации, 
--что стоимость аренды всех фильмов поднялась на 1.41

UPDATE film_new SET film_rental_rate = film_rental_rate + 1.41;

--ЗАДАНИЕ №4
--Фильм с названием "Back to the Future" был снят с аренды, 
--удалите строку с этим фильмом из таблицы film_new

DELETE FROM film_new 
WHERE film_name = 'Back to the Future';

--ЗАДАНИЕ №5
--Добавьте в таблицу film_new запись о любом другом новом фильме

INSERT INTO film_new(film_name, film_year, film_rental_rate, film_duration)
values ('Большой Ух', '1989', '2.99', '125');

--ЗАДАНИЕ №6
--Напишите SQL-запрос, который выведет все колонки из таблицы film_new, 
--а также новую вычисляемую колонку "длительность фильма в часах", округлённую до десятых

SELECT *, round((film_duration /60.),2) AS "Длительность фильма в часах"
FROM film_new fn;

--ЗАДАНИЕ №7 
--Удалите таблицу film_new

DROP TABLE film_new;